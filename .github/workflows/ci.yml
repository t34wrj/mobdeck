name: CI

on:
  push:
    branches: [main, develop, 'feature/**', 'fix/**']
  pull_request:
    branches: [main]
  workflow_call:

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint (allow warnings)
        run: npm run lint || echo "ESLint found issues but continuing build"

      - name: Check Prettier formatting (allow warnings)
        run: npm run format:check || echo "Prettier found formatting issues but continuing build"

      - name: Run TypeScript type check (allow warnings)
        run: npm run type-check || echo "TypeScript check found errors but continuing build"

      - name: Run tests
        run: npm test -- --watchAll=false --passWithNoTests

      # Coverage disabled for v0.1.0 due to React Native component import issues with Jest coverage
      # - name: Upload coverage reports
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: coverage-report
      #     path: coverage/
      #     retention-days: 30
      #     if-no-files-found: ignore

  android-build:
    name: Android Build Test
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        run: npm ci

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Build Android debug APK
        run: |
          cd android
          ./gradlew assembleDebug --no-daemon --stacktrace
        continue-on-error: false

      - name: Build Android release APK (for release workflow)
        if: github.event_name == 'workflow_call' && startsWith(github.ref, 'refs/tags/v')
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon --stacktrace
        continue-on-error: false
        env:
          MOBDECK_UPLOAD_STORE_FILE: ${{ secrets.MOBDECK_UPLOAD_STORE_FILE }}
          MOBDECK_UPLOAD_STORE_PASSWORD: ${{ secrets.MOBDECK_UPLOAD_STORE_PASSWORD }}
          MOBDECK_UPLOAD_KEY_ALIAS: ${{ secrets.MOBDECK_UPLOAD_KEY_ALIAS }}
          MOBDECK_UPLOAD_KEY_PASSWORD: ${{ secrets.MOBDECK_UPLOAD_KEY_PASSWORD }}

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 7
          if-no-files-found: ignore

      - name: Upload release APK (for release workflow)
        if: github.event_name == 'workflow_call' && startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: android/app/build/outputs/apk/release/app-universal-release.apk
          retention-days: 90
          if-no-files-found: error
